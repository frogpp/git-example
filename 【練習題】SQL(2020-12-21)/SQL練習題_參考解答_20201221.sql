USE [GSSWEB]
------------------------------------------------------------------------------------------------------------------------------
/*1.請列出每個借閱人每年借書數量，並依借閱人編號和年度做排序
Table：BOOK_LEND_RECORD、MEMBER_M
*/
SELECT MEMBER_M.[USER_ID]
	,MEMBER_M.USER_CNAME
	,MEMBER_M.USER_ENAME
	,YEAR(BOOK_LEND_RECORD.LEND_DATE) AS [LEND_YEAR]
	,COUNT(1) [QTY_PER_YEAR]
FROM MEMBER_M,BOOK_LEND_RECORD
WHERE MEMBER_M.USER_ID = BOOK_LEND_RECORD.KEEPER_ID
GROUP BY MEMBER_M.USER_ID,MEMBER_M.USER_CNAME,MEMBER_M.USER_ENAME,YEAR(BOOK_LEND_RECORD.LEND_DATE)
ORDER BY MEMBER_M.USER_ID,YEAR(BOOK_LEND_RECORD.LEND_DATE)
------------------------------------------------------------------------------------------------------------------------------
/*2.列出最受歡迎的書前五名(借閱數量最多前五名)
Table：BOOK_LEND_RECORD
*/
SELECT TOP 5 BOOK_LEND_RECORD.BOOK_ID
	,BOOK_DATA.BOOK_NAME,SUM(1) AS [QTY]
FROM BOOK_LEND_RECORD,BOOK_DATA
WHERE BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID AND BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID
GROUP BY BOOK_LEND_RECORD.BOOK_ID,BOOK_DATA.BOOK_NAME
ORDER BY SUM(1) DESC
------------------------------------------------------------------------------------------------------------------------------
/*3.以一季列出2019年每一季書籍借閱書量
Table：BOOK_LEND_RECORD
*/
SELECT A.QUARTER AS [YEAR 2019]
	,COUNT(1) AS [QTY]
FROM
(SELECT (CASE WHEN SUBSTRING(CONVERT(varchar,BOOK_LEND_RECORD.LEND_DATE, 111),1,7) IN ('2019/01','2019/02','2019/03') THEN 'Q1'
	WHEN SUBSTRING(CONVERT(varchar,BOOK_LEND_RECORD.LEND_DATE, 111),1,7) IN ('2019/04','2019/05','2019/06') THEN 'Q2'
	WHEN SUBSTRING(CONVERT(varchar,BOOK_LEND_RECORD.LEND_DATE, 111),1,7) IN ('2019/07','2019/08','2019/09') THEN 'Q3'
	WHEN SUBSTRING(CONVERT(varchar,BOOK_LEND_RECORD.LEND_DATE, 111),1,7) IN ('2019/10','2019/11','2019/12') THEN 'Q4' ELSE NULL END) AS 'QUARTER'
FROM BOOK_LEND_RECORD) A
WHERE A.QUARTER IS NOT NULL
GROUP BY A.QUARTER

------------------------------------------------------------------------------------------------------------------------------
/*4.撈出每個分類借閱數量前三名書本及數量
Table：BOOK_LEND_RECORD、BOOK_CLASS
*/

DECLARE @TEMP_TABLE TABLE (
SEQ INT,
CLASS_NAME VARCHAR(100),
BOOK_ID INT,
BOOK_NAME VARCHAR(100),
QTY INT
)
INSERT INTO @TEMP_TABLE 
SELECT ROW_NUMBER() OVER (PARTITION BY A.CLASS_NAME ORDER BY A.CLASS_NAME ASC,SUM(A.NUM) DESC) AS SEQ
	,A.CLASS_NAME
	,A.BOOK_ID,A.BOOK_NAME
	,SUM(A.NUM) AS QTY
FROM
(SELECT BOOK_CLASS.BOOK_CLASS_NAME AS CLASS_NAME
	,BOOK_LEND_RECORD.BOOK_ID AS BOOK_ID
	,BOOK_DATA.BOOK_NAME AS BOOK_NAME
	,1 AS NUM
FROM BOOK_LEND_RECORD,BOOK_DATA,BOOK_CLASS
WHERE BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID AND BOOK_DATA.BOOK_CLASS_ID = BOOK_CLASS.BOOK_CLASS_ID) A
GROUP BY A.CLASS_NAME,A.BOOK_ID,A.BOOK_NAME
ORDER BY A.CLASS_NAME ASC,SUM(A.NUM) DESC

SELECT * FROM @TEMP_TABLE WHERE SEQ < 4

------------------------------------------------------------------------------------------------------------------------------
/*5.請列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
Table：BOOK_LEND_RECORD
*/
SELECT A.BOOK_CLASS_ID,A.BOOK_CLASS_NAME,SUM(A.CNT2016) AS CNT2016,SUM(A.CNT2017) AS CNT2017,SUM(A.CNT2018) AS CNT2018,SUM(A.CNT2019) AS CNT2019 FROM 
(SELECT BOOK_CLASS.BOOK_CLASS_ID
	,BOOK_CLASS.BOOK_CLASS_NAME
	,(CASE WHEN YEAR(BOOK_LEND_RECORD.LEND_DATE) = '2016' THEN 1 ELSE 0 END) AS [CNT2016]
	,(CASE WHEN YEAR(BOOK_LEND_RECORD.LEND_DATE) = '2017' THEN 1 ELSE 0 END) AS [CNT2017]
	,(CASE WHEN YEAR(BOOK_LEND_RECORD.LEND_DATE) = '2018' THEN 1 ELSE 0 END) AS [CNT2018]
	,(CASE WHEN YEAR(BOOK_LEND_RECORD.LEND_DATE) = '2019' THEN 1 ELSE 0 END) AS [CNT2019]
FROM BOOK_LEND_RECORD,BOOK_DATA,BOOK_CLASS
WHERE BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID AND BOOK_DATA.BOOK_CLASS_ID = BOOK_CLASS.BOOK_CLASS_ID) AS A
GROUP BY A.BOOK_CLASS_ID,A.BOOK_CLASS_NAME

------------------------------------------------------------------------------------------------------------------------------
/*6.	請使用 PIVOT 語法列出2016, 2017, 2018, 2019 各書籍類別的借閱數量比較
Table：BOOK_LEND_RECORD
*/
SELECT BOOK_CLASS_ID
	,BOOK_CLASS_NAME
	,ISNULL([2016],0) AS CNT2016
	,ISNULL([2017],0) AS CNT2017
	,ISNULL([2018],0) AS CNT2018
	,ISNULL([2019],0) AS CNT2019
FROM
(SELECT BOOK_CLASS.BOOK_CLASS_ID
	,BOOK_CLASS.BOOK_CLASS_NAME
	,YEAR(BOOK_LEND_RECORD.LEND_DATE) AS [LEND_YEAR]
	,SUM(1)  AS [LEND_CNT]
FROM BOOK_LEND_RECORD,BOOK_DATA,BOOK_CLASS
WHERE BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID AND BOOK_DATA.BOOK_CLASS_ID = BOOK_CLASS.BOOK_CLASS_ID
GROUP BY BOOK_CLASS.BOOK_CLASS_ID,BOOK_CLASS.BOOK_CLASS_NAME,YEAR(BOOK_LEND_RECORD.LEND_DATE)) AS A
PIVOT (SUM(LEND_CNT) FOR LEND_YEAR IN ([2016],[2017],[2018],[2019])
) AS PVT

------------------------------------------------------------------------------------------------------------------------------
/*7.呈上，請使用 PIVOT 語法列出 2016, 2017, 2018, 2019 各書籍類別的借閱數量比較 
(動態分析所有年度)
Table：BOOK_LEND_RECORD
*/

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MyTempTB]') AND type in (N'U'))
DROP TABLE [dbo].[MyTempTB]
GO

CREATE TABLE MyTempTB(
BOOK_CLASS_ID VARCHAR(20),
BOOK_CLASS_NAME VARCHAR(100),
LEND_YEAR VARCHAR(4),
LEND_CNT INT
)

INSERT INTO MyTempTB
SELECT BOOK_CLASS.BOOK_CLASS_ID
	,BOOK_CLASS.BOOK_CLASS_NAME
	,YEAR(BOOK_LEND_RECORD.LEND_DATE) AS [LEND_YEAR]
	,SUM(1)  AS [LEND_CNT]
FROM BOOK_LEND_RECORD,BOOK_DATA,BOOK_CLASS
WHERE BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID AND BOOK_DATA.BOOK_CLASS_ID = BOOK_CLASS.BOOK_CLASS_ID
GROUP BY BOOK_CLASS.BOOK_CLASS_ID,BOOK_CLASS.BOOK_CLASS_NAME,YEAR(BOOK_LEND_RECORD.LEND_DATE)

DECLARE @ColumnGroup NVARCHAR(MAX), @PivotSQL NVARCHAR(MAX)

SELECT @ColumnGroup = COALESCE(@ColumnGroup + ',' ,'' ) + QUOTENAME(LEND_YEAR) 
FROM MyTempTB
GROUP BY QUOTENAME(LEND_YEAR) 
 
SELECT @PivotSQL = N'
SELECT * FROM MyTempTB PIVOT (SUM(LEND_CNT) FOR LEND_YEAR 
 IN (' + @ColumnGroup +  N') ) AS PVT'
 
EXEC sp_executesql  @PivotSQL;

------------------------------------------------------------------------------------------------------------------------------
/*8.請查詢出李四的借書紀錄，其中包含書本ID、購書日期(yyyy/mm/dd)、借閱日期(yyyy/mm/dd)、書籍類別(id-name)、借閱人(id-cname(ename))、狀態(id-name)、購書金額
Table：BOOK_DATA、BOOK_LEND_RECORD、BOOK_CLASS、BOOK_CODE
*/
SELECT BOOK_LEND_RECORD.BOOK_ID
	,CONVERT(VARCHAR,BOOK_DATA.BOOK_BOUGHT_DATE,111) AS [BOOK_BOUGHT_DATE]
	,CONVERT(VARCHAR,BOOK_LEND_RECORD.LEND_DATE,111) AS [LEND_DATE]
	,BOOK_CLASS.BOOK_CLASS_ID + '-' + BOOK_CLASS.BOOK_CLASS_NAME AS [BOOK_ID-NAME]
	,MEMBER_M.USER_ID + '-' + MEMBER_M.USER_CNAME + '(' + MEMBER_M.USER_ENAME + ')' AS [KEEP_USER]
	,BOOK_DATA.BOOK_STATUS + '-' + BOOK_CODE.CODE_NAME AS [BOOK_STATUS]
	,'$ ' + CONVERT(VARCHAR(50), CONVERT(MONEY, COALESCE(BOOK_DATA.BOOK_AMOUNT, 0)), 1) AS [BOOK_AMOUNT]
FROM BOOK_LEND_RECORD,MEMBER_M,BOOK_DATA,BOOK_CLASS,BOOK_CODE
WHERE BOOK_LEND_RECORD.KEEPER_ID = MEMBER_M.USER_ID 
	AND MEMBER_M.USER_CNAME = '李四'
	AND BOOK_LEND_RECORD.BOOK_ID = BOOK_DATA.BOOK_ID
	AND BOOK_DATA.BOOK_CLASS_ID = BOOK_CLASS.BOOK_CLASS_ID
	AND BOOK_DATA.BOOK_STATUS = BOOK_CODE.CODE_ID
ORDER BY BOOK_LEND_RECORD.CRE_DATE DESC

------------------------------------------------------------------------------------------------------------------------------
/*9.新增一筆借閱紀錄，借書人為李四，書本ID為2004，並修改借閱日期為2019/01/02*/
DECLARE @UID VARCHAR(20)
SET @UID = (SELECT TOP 1 [USER_ID] FROM MEMBER_M WHERE USER_CNAME = N'李四')
INSERT INTO [BOOK_LEND_RECORD]
		([BOOK_ID]
		,[KEEPER_ID]
		,[LEND_DATE]
		,[CRE_DATE]
		,[CRE_USR]
		,[MOD_DATE]
		,[MOD_USR])
VALUES
		(2004	--BOOK_ID
		,@UID	--KEEPER_ID
		,CONVERT(VARCHAR,GETDATE(),111)	--LEND_DATE
		,CONVERT(VARCHAR,GETDATE(),111)	--CRE_DATE
		,@UID	--CRE_USR
		,CONVERT(VARCHAR,GETDATE(),111)	--MOD_DATE
		,@UID)	--MOD_USR

DECLARE @TRAN_ID INT = SCOPE_IDENTITY()

UPDATE [BOOK_LEND_RECORD] SET [LEND_DATE] = '2019/01/02' WHERE IDENTITY_FILED = @TRAN_ID

SELECT * FROM [BOOK_LEND_RECORD] WHERE IDENTITY_FILED = @TRAN_ID

------------------------------------------------------------------------------------------------------------------------------
/*10.請將題9新增的借閱紀錄(書本ID=2004)刪除*/
DECLARE @UserID INT
SET @UserID = (SELECT TOP 1 [USER_ID] FROM MEMBER_M WHERE USER_CNAME = '李四')
DECLARE @RecordID INT
SET @RecordID = (SELECT TOP 1 IDENTITY_FILED FROM [BOOK_LEND_RECORD] WHERE [KEEPER_ID] = @UserID AND [LEND_DATE] = '2019/01/02')
DELETE FROM [BOOK_LEND_RECORD] WHERE IDENTITY_FILED = @RecordID

